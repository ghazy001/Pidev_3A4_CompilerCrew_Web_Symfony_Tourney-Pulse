{% extends 'base.html.twig' %}

{% block body %}


    <div style="margin-top: 200px; margin-left: 1270px;">
        <label class="switch" id="switch">
            <input type="checkbox" id="darkModeSwitch">
            <div class="button">
                <div class="light"></div>
                <div class="dots"></div>
                <div class="characters"></div>
                <div class="shine"></div>
                <div class="shadow"></div>
            </div>
        </label>
    </div>


    <div style="margin-top: 10px; margin-left: 450px" >

        {{ form_start(f) }}

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group mb-32">
                    {{ form_label(f.user, 'Player name') }}
                    {{ form_widget(f.user, {'attr': {'class': 'form-control', 'id': 'fname', 'required': true}}) }}
                    {{ form_errors(f.user) }}
                </div>
            </div>
        </div>

        <!-- Star Rating System -->
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group mb-32">
                    <label for="rating" class="control-label"></label>
                    <div class="rating" id="rating" style="margin-left: 40px">
                        <i class="rating__star far fa-star" data-value="1"></i>
                        <i class="rating__star far fa-star" data-value="2"></i>
                        <i class="rating__star far fa-star" data-value="3"></i>
                        <i class="rating__star far fa-star" data-value="4"></i>
                        <i class="rating__star far fa-star" data-value="5"></i>
                    </div>
                    <input type="hidden" id="rating_value" name="rating_value">
                </div>
            </div>
        </div>
        <!-- End Star Rating System -->

        <div class="row">
            <div class="col-sm-6">
                <div class="form-group mb-32">
                    {{ form_row(f.dateavis, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(f.dateavis) }}
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-6">
                <div class="form-group mb-32" >
                    {{ form_row(f.commentaire, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(f.commentaire) }}
                </div>
            </div>
        </div>

        <div class="row" style="display: none;">
            <div class="col-sm-6">
                <div class="form-group mb-32">
                    {{ form_row(f.note, {'attr': {'class': 'form-control', 'style': 'display: none;'}}) }}
                </div>
            </div>
        </div>



        <div class="row">
            <div class="col-sm-6">
                <div class="form-group mb-32">
                    {{ form_widget(f.submit, {'attr': {'class': 'form-btn w-100 mb-32'}}) }}
                </div>
            </div>
        </div>
        {{ form_end(f) }}




    </div>

    <script>
        const stars = document.querySelectorAll('.rating__star');
        const ratingValueInput = document.getElementById('rating_value');
        const noteInput = document.getElementById('{{ f.note.vars.id }}');



        // Function to handle click on a star
        function handleStarClick(index) {
            stars.forEach((star, i) => {
                if (i <= index) {
                    star.classList.remove('far');
                    star.classList.add('fas');
                } else {
                    star.classList.remove('fas');
                    star.classList.add('far');
                }
            });


            const ratingValue = index + 1;






            ratingValueInput.value = ratingValue;
            noteInput.value = ratingValue;

        }

        // Attach click event listeners to stars
        stars.forEach((star, index) => {
            star.addEventListener('click', () => {
                handleStarClick(index);
            });
        });
    </script>

    <style>
        .rating {
            display: inline-block; /* Ensure stars are displayed in a line */
            font-size: 55px; /* Increase the font size to make stars larger */
            line-height: 1; /* Ensure proper alignment of stars */
        }

        .rating__star {
            color: #ffd700; /* Set the star color to yellow */
            cursor: pointer; /* Set cursor to pointer to indicate interactivity */
            transition: color 0.2s ease; /* Smooth transition effect */
        }

        /* Add hover effect to change star color on hover */
        .rating__star:hover,
        .rating__star:hover ~ .rating__star {
            color: greenyellow; /* Change color on hover */
        }
        .switch {
            display: block;
            background-color: black;
            width: 150px;
            height: 195px;
            box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.2), 0 0 1px 2px black, inset 0 2px 2px -2px white, inset 0 0 2px 15px #47434c, inset 0 0 2px 22px black;
            border-radius: 5px;
            padding: 20px;
            perspective: 700px;
        }

        .switch input {
            display: none;
        }

        .switch input:checked + .button {
            transform: translateZ(20px) rotateX(25deg);
            box-shadow: 0 -10px 20px #ff1818;
        }

        .switch input:checked + .button .light {
            animation: flicker 0.2s infinite 0.3s;
        }

        .switch input:checked + .button .shine {
            opacity: 1;
        }

        .switch input:checked + .button .shadow {
            opacity: 0;
        }

        .switch .button {
            display: block;
            transition: all 0.3s cubic-bezier(1, 0, 1, 1);
            transform-origin: center center -20px;
            transform: translateZ(20px) rotateX(-25deg);
            transform-style: preserve-3d;
            background-color: #9b0621;
            height: 100%;
            position: relative;
            cursor: pointer;
            background: linear-gradient(#980000 0%, #6f0000 30%, #6f0000 70%, #980000 100%);
            background-repeat: no-repeat;
        }

        .switch .button::before {
            content: "";
            background: linear-gradient(rgba(255, 255, 255, 0.8) 10%, rgba(255, 255, 255, 0.3) 30%, #650000 75%, #320000) 50% 50%/97% 97%, #b10000;
            background-repeat: no-repeat;
            width: 100%;
            height: 50px;
            transform-origin: top;
            transform: rotateX(-90deg);
            position: absolute;
            top: 0;
        }

        .switch .button::after {
            content: "";
            background-image: linear-gradient(#650000, #320000);
            width: 100%;
            height: 50px;
            transform-origin: top;
            transform: translateY(50px) rotateX(-90deg);
            position: absolute;
            bottom: 0;
            box-shadow: 0 50px 8px 0px black, 0 80px 20px 0px rgba(0, 0, 0, 0.5);
        }

        .switch .light {
            opacity: 0;
            animation: light-off 1s;
            position: absolute;
            width: 100%;
            height: 100%;
            background-image: radial-gradient(#ffc97e, #ff1818 40%, transparent 70%);
        }

        .switch .dots {
            position: absolute;
            width: 100%;
            height: 100%;
            background-image: radial-gradient(transparent 30%, rgba(101, 0, 0, 0.7) 70%);
            background-size: 10px 10px;
        }

        .switch .characters {
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(white, white) 50% 20%/5% 20%, radial-gradient(circle, transparent 50%, white 52%, white 70%, transparent 72%) 50% 80%/33% 25%;
            background-repeat: no-repeat;
        }

        .switch .shine {
            transition: all 0.3s cubic-bezier(1, 0, 1, 1);
            opacity: 0.3;
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(white, transparent 3%) 50% 50%/97% 97%, linear-gradient(rgba(255, 255, 255, 0.5), transparent 50%, transparent 80%, rgba(255, 255, 255, 0.5)) 50% 50%/97% 97%;
            background-repeat: no-repeat;
        }

        .switch .shadow {
            transition: all 0.3s cubic-bezier(1, 0, 1, 1);
            opacity: 1;
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(transparent 70%, rgba(0, 0, 0, 0.8));
            background-repeat: no-repeat;
        }

        @keyframes flicker {
            0% {
                opacity: 1;
            }

            80% {
                opacity: 0.8;
            }

            100% {
                opacity: 1;
            }
        }

        @keyframes light-off {
            0% {
                opacity: 1;
            }

            80% {
                opacity: 0;
            }
        }

    </style>

    <script>
        const darkModeSwitch = document.getElementById('darkModeSwitch');
        const body = document.body;

        darkModeSwitch.addEventListener('change', () => {
            if (darkModeSwitch.checked) {
                body.classList.add('dark-mode');
            } else {
                body.classList.remove('dark-mode');
            }
        });
    </script>

    <style>
        /* Your existing styles go here */

        /* Additional styles for dark mode */
        .dark-mode {
            background-color: #1a1a1a;
            color: #ffffff;
        }

        .dark-mode .switch .button {
            background: linear-gradient(#333, #222);
        }

        .dark-mode .switch .shine,
        .dark-mode .switch .shadow {
            opacity: 0.5;
        }
    </style>


{% endblock %}
