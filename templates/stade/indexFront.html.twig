{% extends 'baseFront.html.twig' %}

{% block title %}Stade Index{% endblock %}

{% block content %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>

    <section class="p-96">
        <div class="container">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Stades /</span> Browse</h4>

            <div class="search-container">
                <input type="text" id="searchBox" class="search-input" placeholder="Enter location">
                <button onclick="searchLocation()" class="search-button">Search</button>
            </div>

            <div class="shop-grid">
                <div class="row">
                    {% for stade in stades %}
                        <div class="col-lg-4 col-sm-6">
                            <div class="product-card">
                                {% if stade.images|length > 0 %}
                                    <div id="carouselExample{{ loop.index }}" class="carousel slide" data-bs-ride="carousel">
                                        <div class="carousel-inner">
                                            {% for image in stade.images %}
                                                <div class="carousel-item {{ loop.first ? 'active' : '' }}">
                                                    <img src="{{ asset('uploads/images/' ~ image.urlImage) }}" class="d-block w-100" alt="{{ stade.nom }}">
                                                </div>
                                            {% endfor %}
                                        </div>
                                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample{{ loop.index }}" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#carouselExample{{ loop.index }}" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        </button>
                                    </div>
                                {% else %}
                                    <img src="{{ asset('uploads/image.png') }}" alt="Default Image" class="d-block w-100">
                                {% endif %}
                                <div class="stade-info">
                                  <style>
    .info-container {
        display: flex;
        flex-direction: column;
        align-items: center; /* Centre les éléments horizontalement */
        text-align: center; /* Centre le texte à l'intérieur des éléments */
    }

    .info-row {
        margin-bottom: 10px; /* Ajoute un espacement entre chaque ligne d'info */
        opacity: 0; /* Commence avec une opacité de 0 */
        transition: opacity 0.5s ease-in-out; /* Transition de l'opacité */
    }

    .info-row.visible {
        opacity: 1; /* Met l'opacité à 1 lorsqu'il est visible */
    }

    .label {
        font-weight: bold; /* Rend le texte de l'étiquette en gras */
        margin-right: 10px; /* Ajoute un espace à droite de l'étiquette */
        color: #333; /* Couleur du texte de l'étiquette */
    }

    .value {
        color: #555; /* Couleur du texte de la valeur */
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Fonction pour ajouter la classe 'visible' aux lignes d'info
        var infoRows = document.querySelectorAll(".info-row");
        infoRows.forEach(function(row) {
            row.classList.add("visible");
        });
    });
</script>

<div class="info-container">
    <div class="info-row nom">
        <span class="label">Nom :</span>
        <span class="value">{{ stade.nom }}</span>
    </div>

    <div class="info-row lieu">
        <span class="label">Lieu :</span>
        <span class="value">{{ stade.lieu }}</span>
    </div>

    <div class="info-row capacite">
        <span class="label">Capacité :</span>
        <span class="value">{{ stade.capacity }}</span>
    </div>

    <div class="info-row numero">
        <span class="label">Numéro :</span>
        <span class="value">{{ stade.numero }}</span>
    </div>
</div>

                                </div>
                                <div class="cart-btn">
                                    <a href="{{ path('app_stade_reservation_new', {'stadeId': stade.id}) }}" class="cta-2"><span class="span">Reserve <i class="far fa-chevron-right"></i></span></a>
                                </div>
                            </div>
                        </div>
                               

                    {% else %}
                        <div class="col-12">
                            <p>No stades available.</p>
                        </div>
                    {% endfor %}
                </div>
            </div>
            <div id="mapid" style="width: 100%; height: 400px;"></div>

        </div>
    </section>

 <style>
    /* General Container Styling */
    .search-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    /* Styling for the Search Input */
    .search-input {
        padding: 12px 15px; /* Ajustement du rembourrage */
        font-size: 16px;
        border: 2px solid #3498db; /* Couleur de la bordure bleue */
        border-radius: 5px; /* Coins arrondis uniformes */
        width: 300px;
        transition: border-color 0.3s; /* Transition de couleur de bordure */
    }

    .search-input:focus {
        outline: none; /* Suppression de la mise en évidence de la boîte de saisie lorsqu'elle est sélectionnée */
        border-color: #2ecc71; /* Changement de couleur de bordure lorsque la boîte de saisie est sélectionnée */
    }

    /* Styling for the Search Button */
    .search-button {
        padding: 12px 20px; /* Ajustement du rembourrage */
        font-size: 16px;
        background-color: #2ecc71; /* Couleur verte pour le bouton */
        color: white;
        border: none;
        cursor: pointer;
        border-radius: 5px; /* Coins arrondis uniformes */
        transition: background-color 0.3s;
    }

    .search-button:hover {
        background-color: #27ae60; /* Shade vert plus foncé pour l'effet de survol */
    }
</style>



    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var map = L.map('mapid').setView([51.505, -0.09], 2); // Start with a global view

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors'
            }).addTo(map);

            var markers = [];

            {% for stade in stades %}
            var address = "{{ stade.lieu|e('js') }}";
            fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + encodeURIComponent(address))
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        var lat = data[0].lat;
                        var lon = data[0].lon;
                        var marker = L.marker([lat, lon]).addTo(map);
                        marker.bindPopup("<b>{{ stade.nom|e('js') }}</b><br>{{ stade.lieu|e('js') }}");
                        markers.push({marker: marker, lieu: "{{ stade.lieu|e('js') }}"});
                    }
                });
            {% endfor %}

            window.searchLocation = function() {
                var inputLocation = document.getElementById('searchBox').value.toLowerCase();
                var found = false;
                markers.forEach(function(item) {
                    if (item.lieu.toLowerCase().includes(inputLocation)) {
                        map.setView(item.marker.getLatLng(), 10);
                        item.marker.openPopup();
                        found = true;
                    }
                });
                if (!found) alert('No matching location found.');
            };
        });
    </script>

 {{ knp_pagination_render(stades) }}
{% endblock %}
